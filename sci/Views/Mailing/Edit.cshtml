@model sci.Models.Posta_Prototipi

@{
    ViewBag.Title = "Posta Elettronica";
    ViewBag.url = "/Mailing/SendMail/" + Model.Codice.ToString();
}

<h3>Gestione Posta Elettronica</h3>

@using (Html.BeginForm())
{

    @Html.AntiForgeryToken()


    <div class="container-fluid" style="margin-left:-20px;">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Codice)

        <div class="row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.CodiceConn, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.CodiceConn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CodiceConn, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-3">
                @Html.LabelFor(model => model.Sender, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Sender, new { htmlAttributes = new { @class = "form-control", @type = "email" } })
                @Html.ValidationMessageFor(model => model.Sender, "", new { @class = "text-danger" })
            </div>


            <div class="col-md-3">
                @Html.LabelFor(model => model.NotificationTo, htmlAttributes: new { @class = "control-label col-md-2", @type = "email" })
                @Html.EditorFor(model => model.NotificationTo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NotificationTo, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-3">
                @Html.LabelFor(model => model.ReceiptTo, htmlAttributes: new { @class = "control-label col-md-2", @type = "email" })
                @Html.EditorFor(model => model.ReceiptTo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReceiptTo, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-3">
                @Html.LabelFor(model => model.Header, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Header, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Header, "", new { @class = "text-danger" })
            </div>      

            <div class="col-md-3">
                @Html.LabelFor(model => model.Allegati, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Allegati, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Allegati, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-3">
                @Html.LabelFor(model => model.Footer, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Footer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Footer, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.CC, htmlAttributes: new { @class = "control-label col-md-2", @type = "email" })
                @Html.EditorFor(model => model.CC, new { htmlAttributes = new { @class = "form-control " } })
                @Html.ValidationMessageFor(model => model.CC, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-3">
                @Html.LabelFor(model => model.BCC, htmlAttributes: new { @class = "control-label col-md-2", @type = "email" })
                @Html.EditorFor(model => model.BCC, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BCC, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-3">
                @Html.LabelFor(model => model.emailtest, htmlAttributes: new { @class = "control-label col-md-2", @type = "email" })
                @Html.EditorFor(model => model.emailtest, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.emailtest, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-3">
                @Html.LabelFor(model => model.Azione, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Azione, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Azione, "", new { @class = "text-danger" })
            </div>

        </div>
        <br />
        <div class="row">

            <div class="col-md-3">
                @Html.LabelFor(model => model.IDFiltro, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.DropDownListFor(model => model.IDFiltro, new SelectList((IEnumerable<SelectListItem>)ViewBag.IDFiltro, "Value", "Text", Model.IDFiltro), new { @id = "IDFiltro", @Name = "IDFiltro" })
                
                <input type="submit" style="margin-top:25px;" value="Salva e Aggiorna Lista Destinatari" class="btn btn-default" name="submit" id="salva" />
                <br />
                <br />
                <input type="submit" style="margin-bottom:20px;" value="SendMail" class="btn btn-default" name="submit" id="sendmail" />

                <button onclick="StartProcess()" style="margin-left:10px; margin-bottom:20px;" type="button" class="btn btn-primary btn-success">Avvia Spedizione</button>

            </div>
           
            <div class="col-md-3" style="margin-left:20px;">
                @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.TextAreaFor(model => model.Message, 7 , 30, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
            </div>

            
            <div class="col-md-3">
                @Html.LabelFor(model => model.FullMessage, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.TextAreaFor(model => model.FullMessage, 7, 50, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.FullMessage, "", new { @class = "text-danger" })
            </div>
            
        </div>
        <br />
    </div>

        <div class="modal fade in" id="mod-progress" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                    </div>
                    <div class="modal-body">
                        <div class="text-center">
                            <div class="i-circle warning"><i class="fa fa-info"></i></div>
                            <div id="result" style="font-size: 1.1em; padding-bottom: 5px">
                                <p id="progressBarParagraph"></p>
                            </div>
                            <div style="width: 30%; margin: 0 auto; display:none;">
                                <div id="progressbar" style="width: 300px; height: 15px"></div>
                                <br />
                            </div>
                            <div id="ProgressStripe" class="progress progress-striped active" style="position:relative; top:10px; width:100%;">
                                <div id="ProgressMessage" class="progress-bar progress-bar-info" style="width: 100%; border:none;"></div>
                            </div>
                            <br />
                        </div>
                    </div>
                </div>
                <!-- /.modal-content -->
            </div>
            <!-- /.modal-dialog -->
        </div>
        <!-- /.modal -->

        <table class="table">
            <tr>
                <th>Da inviare</th>
                <th>Ricevuta</th>
                <th>Inviato</th>
                <th>Notifica</th>
                <th>Destinatario</th>
                <th>Email</th>
            </tr>
            @foreach (var item in Model.Posta_Messaggi)
            {
                <tr>
                    <td>
                        @Html.CheckBoxFor(modelItem => item.FlagInvio, new { @disabled = "disabled" })
                    </td>
                    <td>
                        @Html.CheckBoxFor(modelItem => item.FlagRicevuta, new { @disabled = "disabled" })
                    </td>
                    <td>
                        @Html.CheckBoxFor(modelItem => item.FlagSpedito, new { @disabled = "disabled" })
                    </td>
                    <td>
                        @Html.CheckBoxFor(modelItem => item.FlagNotificaServer, new { @disabled = "disabled" })
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Nom)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.E_Mail)
                    </td>
                    <td>
                        @Html.ActionLink("Aggiorna", "Update", "Posta_Messaggi", new { codice = Model.Codice, codp = item.CodP, annop = item.AnnoP }, null) |
                        @Html.ActionLink("Cancella", "Details", "Posta_Messaggi", new { codp = item.CodP, annop = item.AnnoP }, null) |
                    </td>
                </tr>
            }
        </table>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>


        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
            <script src="/Scripts/Helper.js" type="text/javascript"></script>
            <script src="/Scripts/jquery.signalR-2.2.1.js" type="text/javascript"></script>
            <script src="/signalr/hubs"></script>

            <script>
        var url = "@ViewBag.url";
        //CALLING METHOD IN THE CONTROLLER TO DO SOME WORK
        function StartProcess() {

            $.getJSON(url,
            {},
            function (data) {
                if (!data) {
                    alert("Spedizione terminata");
                }
                else
                {
                    alert(data);
                }
            });
        }
            </script>

            <script type="text/javascript">
                $(function () {
                    // Reference the auto-generated proxy for the hub.
                    var progress = $.connection.progressHub;
                    console.log(progress);

                    // Create a function that the hub can call back to display messages.
                    progress.client.AddProgress = function (message, percentage) {
                        ProgressBarModal("show", message + " " + percentage);
                        $('#ProgressMessage').width(percentage);
                        if (percentage == "100%") {
                            ProgressBarModal();
                        }
                    };

                    $.connection.hub.start().done(function () {
                        var connectionId = $.connection.hub.id;
                        console.log(connectionId);
                    });

                });

            </script>
        }
